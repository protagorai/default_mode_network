[tool.poetry]
name = "synthetic-default-mode-network"
version = "0.1.0"
description = "A framework for simulating synthetic default mode networks with biologically-inspired neural dynamics"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/yourusername/synthetic-default-mode-network"
repository = "https://github.com/yourusername/synthetic-default-mode-network"
documentation = "https://synthetic-default-mode-network.readthedocs.io"
keywords = ["neuroscience", "neural-networks", "simulation", "default-mode-network"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
packages = [{include = "sdmn", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8.1"
# Core scientific computing
numpy = "^1.24.0"
scipy = "^1.10.0"
matplotlib = "^3.6.0"
# Network analysis
networkx = "^3.0"
# Data handling (optional - can be problematic on Windows without build tools)
pandas = {version = "^1.5.0", optional = true}
# Configuration and CLI
pyyaml = "^6.0"
tqdm = "^4.64.0"
click = "^8.1.0"
# Visualization
plotly = {version = "^5.17.0", optional = true}
seaborn = {version = "^0.12.0", optional = true}
# Performance computing
numba = {version = "^0.58.0", optional = true}
scikit-learn = {version = "^1.2.0", optional = true}
# Image processing
pillow = "^10.0.0"
# Data serialization
h5py = {version = "^3.8.0", optional = true}
# Jupyter support
jupyter = "^1.0.0"
jupyterlab = "^4.0.0"
ipywidgets = "^8.0.0"
ipympl = "^0.9.0"
# Utilities
toml = "^0.10.0"
pytz = "^2023.3"
requests = "^2.28.0"
# Parallel computing
joblib = "^1.2.0"
# Monitoring
psutil = "^5.9.0"
memory-profiler = {version = "^0.61.0", optional = true}
# Statistical analysis
statsmodels = {version = "^0.14.0", optional = true}
# GUI (optional)
PyQt5 = {version = "^5.15.0", optional = true}
# Multi-processing utilities
multiprocessing-logging = "^0.3.4"

[tool.poetry.group.dev.dependencies]
# Testing framework and plugins
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-xdist = "^3.2.0"
pytest-benchmark = "^4.0.0"
# Code formatting and linting
black = "^22.0.0"
isort = "^5.10.0"
flake8 = "^5.0.0"
mypy = "^1.0.0"
pylint = "^2.15.0"
# Git hooks and quality
pre-commit = "^2.17.0"
bandit = "^1.7.0"
# Documentation tools
sphinx = "^5.0.0"
sphinx-rtd-theme = "^1.0.0"
sphinx-autodoc-typehints = "^1.20.0"
myst-parser = "^1.0.0"
# Development utilities
ipdb = "^0.13.0"
ipython = "^8.0.0"
# Profiling and performance analysis
line-profiler = "^4.0.0"
py-spy = "^0.3.0"
scalene = "^1.5.0"
# Type checking helpers
types-PyYAML = "^6.0.0"
types-requests = "^2.28.0"
types-setuptools = "^67.0.0"
# Build and packaging tools
build = "^0.10.0"
twine = "^4.0.0"
setuptools = "^67.0.0"
wheel = "^0.40.0"
# Version management
bump2version = "^1.0.0"
# Code complexity analysis
radon = "^6.0.0"
xenon = "^0.9.0"
# Dependency management
pip-tools = "^7.0.0"
pipdeptree = "^2.5.0"
# Jupyter development extensions
jupyterlab-code-formatter = "^2.2.0"
jupyterlab-git = "^0.44.0"
# Visualization development
graphviz = "^0.20.0"
# Data validation
pydantic = "^2.0.0"
jsonschema = "^4.17.0"

[tool.poetry.group.test.dependencies]
pytest-xdist = "^3.2.0"
pytest-benchmark = "^4.0.0"
coverage = "^6.3.0"

# Optional dependency groups for specific features
[tool.poetry.group.web.dependencies]
flask = "^2.3.0"
fastapi = "^0.100.0"
uvicorn = "^0.23.0"

[tool.poetry.group.data.dependencies]
sqlalchemy = "^2.0.0"
netcdf4 = "^1.6.0"
zarr = "^2.14.0"

[tool.poetry.group.neurosim.dependencies]
brian2 = {version = "^2.5.0", optional = true}
# nest-simulator = {version = "^3.4", markers = "platform_system != 'Windows'"}  # Disabled due to availability issues

# Optional extras for pip installation
[tool.poetry.extras]
all = ["pandas", "plotly", "seaborn", "numba", "scikit-learn", "h5py", "memory-profiler", "statsmodels", "PyQt5"]
visualization = ["plotly", "seaborn"]
performance = ["numba", "memory-profiler"]
data = ["pandas", "h5py", "statsmodels"]
gui = ["PyQt5"]
neurosim = ["brian2"]
web = ["flask", "fastapi", "uvicorn"]

[tool.poetry.scripts]
sdmn = "sdmn.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["sdmn"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ __ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
